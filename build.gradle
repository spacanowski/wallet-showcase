apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    jcenter()
}

ext {
    versions = [
        lombok                  : '1.18.10',
        dropwizard              : '2.0.0',
        junit                   : '5.3.2',
        junitPlatform           : '1.5.2',
        hamcrest                : '2.0.0.0',
        mockito                 : '3.0.0',
        hikari                  : '3.4.1'
    ]
}

dependencies {
    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    implementation "io.dropwizard:dropwizard-core:${versions.dropwizard}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
    testImplementation "org.junit.platform:junit-platform-commons:${versions.junitPlatform}"
    testImplementation "org.hamcrest:java-hamcrest:${versions.hamcrest}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockito}"

    testImplementation "io.dropwizard:dropwizard-testing:${versions.dropwizard}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

def testResultLogging(test, testLogging) {
    return {
        testLogging.events "passed", "skipped", "failed"

        // https://medium.com/@wasyl/pretty-tests-summary-in-gradle-744804dd676c
        test.afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

test {
    useJUnitPlatform()
    testLogging testResultLogging(test, testLogging)
}
